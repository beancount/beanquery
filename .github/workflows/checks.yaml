name: checks
on:
  - push
  - pull_request
jobs:
  pylint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt pylint
      - run: python -m pylint beanquery/
  coverage:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt coverage
      - name: Run coverage
        # Check tests coverage. Instead of checking project coverage of
        # all the tests we check that each module is exaustively tested
        # by the dedicated units tests.
        run: |
          echo '{

            "beanquery/query_parser.py": "beanquery/query_parser_test.py",
            "beanquery/query_render.py": "beanquery/query_render_test.py"

          }' | jq -rc 'to_entries | .[] | (.key + "=" + .value)' | while IFS='=' read src test
          do
            echo python -m coverage run --branch --include "$src" -m unittest "$test"
            python -m coverage run --branch --include "$src" -m unittest $test
            echo python -m coverage report --precision=2 --fail-under=100 "$src"
            python -m coverage report --precision=2 --fail-under=100 "$src"
          done
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt wheel build
      - run: python -m build --no-isolation
      - run: python -m pip install dist/beanquery-*.whl
